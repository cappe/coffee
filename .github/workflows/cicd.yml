name: CI/CD

on:
  push:
    branches:
      - master-docker-compose

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
      VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      NODE_ENV: production

    steps:
      - name: Checkout the sources
        uses: actions/checkout@v1
      - name: Login to private registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build the docker-compose stack
        run: docker-compose -f docker-compose.yml up -d
      - name: Check running containers
        run: docker ps -a
      - name: Check logs
        run: docker logs backend-frontend
      - name: Push to registry
        run: docker-compose -f docker-compose.yml push

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull updated images & update running containers
        uses: appleboy/ssh-action@master
        env:
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
          VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          NODE_ENV: production
        with:
          envs: GITHUB_REF,DOCKER_REGISTRY,VAPID_PRIVATE_KEY,VAPID_PUBLIC_KEY,NODE_ENV
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            git fetch origin
            git --work-tree=. checkout $GITHUB_REF -- docker-compose.yml
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up --no-build -d --remove-orphans
